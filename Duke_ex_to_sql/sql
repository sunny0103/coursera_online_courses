

week5 
==================================================================================================================================
Exercise
==================================================================================================================================
question 2.
SELECT sku,SUM(amt)
FROM trnsact
WHERE stype='P' AND (EXTRACT(MONTH from saledate)=6 OR EXTRACT(MONTH from saledate)=7 OR EXTRACT(MONTH from saledate)=8)
GROUP BY sku
ORDER BY 2 DESC;

question 3.
select df.store,df.yr,df.mon,count(distinct df.d) as numofday
from(select store, extract(month from saledate) as mon, extract(year from saledate) as yr,extract(day from saledate) as d
from trnsact) as df
group by df.mon, df.yr,df.store
order by numofday asc;

question 4-1.
select df.store, df.yr,df.mon,sum(df.amt),sum(df.amt)/count(distinct saledate) 
from(select store, stype,amt,extract(month from saledate) as mon, extract(year from saledate) as yr,saledate
from trnsact) as df
where df.stype='p'
group by df.store, df.yr,df.mon
order by df.store;

question 4-2. (removing 2005/8 and having more then 20 sales date)
select df.store, df.yr,df.mon,sum(df.amt),sum(df.amt)/count(distinct saledate) 
from(select store, stype,amt,extract(month from saledate) as mon, extract(year from saledate) as yr,saledate
from trnsact) as df
where df.stype='p' and not(df.mon=8 and df.yr=2005)
group by df.store, df.yr,df.mon
having count(distinct saledate)>=20
order by df.store

question 5
SELECT store,  
case when(msa_high>70) then 'high'
     when(msa_high>60) then 'medium'
     when(msa_high>50) then 'low' 
     else 'very low' end
FROM store_msa;

select msa.ranking,sum(stores.rev)/sum(stores.numdays) as avg_sales
from(select store, count(distinct saledate)as numdays,sum(amt)as rev
from trnsact
where stype='p' 
group by store) as stores
join (SELECT store,  
      case when(msa_high>70) then 'high'
           when(msa_high>60) then 'medium'
           when(msa_high>50) then 'low' 
            else 'very low' end as ranking
      FROM store_msa)as msa
on msa.store=stores.store
group by msa.ranking;

question 6
* average daily revenue for highest income
select distinct t.store as store, high.city as city,high.state as state,high.msa_income as income
from(select top 1 m.store,m.city,m.state,m.msa_income
from store_msa m
order by m.msa_income desc) as high join trnsact t
on high.store=t.store;

* average daily revenue for lowest income
select distinct t.store as store, high.city as city,high.state as state,high.msa_income as income
from(select top 1 m.store,m.city,m.state,m.msa_income
from store_msa m
order by m.msa_income ) as high join trnsact t
on high.store=t.store;

question 7
select sku,count(distinct saledate) as numdays, stddev_samp(sprice) as std
from trnsact
group by sku
having numdays>100;

* all the result
select su.brand as brand, su.sku as sk, std_tr.std as sd
from(select sku,count(distinct saledate) as numdays, stddev_samp(sprice) as std
from trnsact
group by sku
having numdays>100)as std_tr join skuinfo su
on su.sku=std_tr.sku
order by sd desc;

* answer the question
select su.brand as brand, su.sku as sk, std_tr.std as sd
from(select top 1 sku,count(distinct saledate) as numdays, stddev_samp(sprice) as std
from trnsact
group by sku
having numdays>100
order by std desc)as std_tr join skuinfo su
on su.sku=std_tr.sku
order by sd desc;

question 8
*without transaction date set
select t.sku as sku, t.saledate,t.sprice
from(select top 1 sku,stddev_samp(sprice) as std
from trnsact
group by sku
order by std desc)as s join trnsact t
on s.sku=t.sku;

*with transaction date over 100 days
select t.sku as sku, t.saledate,t.sprice
from(select top 1 sku,stddev_samp(sprice) as std, count(distinct saledate) as numdays
from trnsact
group by sku
having numdays>100
order by std desc)as s join trnsact t
on s.sku=t.sku;

question 9
select t.mon as mon, t.rev/t.numdays as avg_rev
from(select extract(month from saledate) as mon, extract(year from saledate) as yr, sum(amt) as rev, count(distinct saledate) as numdays
from trnsact
where stype='p'
group by yr, mon
having not(mon=8 and yr=2005)) as t
order by mon;

question 10

subquery
* searching top1 store which has greatest percentage sales increase between nov and dec
select  top 1 td.store as store,
sum(case when td.mon=11 then td.numdays end) as nov_numdays,
sum(case when td.mon=12 then td.numdays end) as dec_numdays,
sum(case when td.mon=11 then td.rev end) as nov_rev,
sum(case when td.mon=12 then td.rev end)as dec_rev,
nov_rev/nov_numdays as y,
dec_rev/dec_numdays as x,
((x-y)/y)*100 as perc
from(select store, extract(month from saledate) as mon, extract(year from saledate) as yr,count(distinct saledate) as numdays,sum(amt) as rev
from trnsact
where stype='p'
group by store, yr,mon
having numdays>=20 and mon in(11,12)) as td
group by store
order by perc desc

*answer
select df.store,msa.city,msa.state,df.perc
from(select  top 1 td.store as store,
sum(case when td.mon=11 then td.numdays end) as nov_numdays,
sum(case when td.mon=12 then td.numdays end) as dec_numdays,
sum(case when td.mon=11 then td.rev end) as nov_rev,
sum(case when td.mon=12 then td.rev end)as dec_rev,
nov_rev/nov_numdays as y,
dec_rev/dec_numdays as x,
((x-y)/y)*100 as perc
from(select store, extract(month from saledate) as mon, extract(year from saledate) as yr,count(distinct saledate) as numdays,sum(amt) as rev
from trnsact
where stype='p'
group by store, yr,mon
having numdays>=20 and mon in(11,12)) as td
group by store
order by perc desc) as df join store_msa as msa
on msa.store=df.store

question 11
* not sure whether it is rigt

select df.store as store,sm.city as city, sm.state as state, df.change as change
from(select top 1 rdf.store as store, 
sum(case when rdf.mon=8 then rdf.numdays end) as aug_numdays,
sum(case when rdf.mon=9 then rdf.numdays end) as sep_numdays,
sum(case when rdf.mon=8 then rdf.rev end) as aug_rev,
sum(case when rdf.mon=9 then rdf.rev end) as sep_rev,
aug_rev/aug_numdays as y,
sep_rev/sep_numdays as x,
x-y as change
from(select store, extract(month from saledate) as mon, extract(year from saledate) as yr,
extract(year from saledate)||extract(month from saledate) as dym, count(distinct saledate) as numdays, 
sum(amt) as rev
from trnsact
where stype='P'
group by store, yr, mon
having numdays>=20 and mon in(8,9))as rdf
group by store
having change IS NOT NULL
order by change)as df join store_msa as sm
on df.store=sm.store

question 12
 *mininum average revenue for each store
select store,extract(year from saledate) as yr, extract(month from saledate) as mon,count(distinct saledate)as numdays,
sum(amt) as rev, rev/numdays as avg_sale,rank() over(PARTITION BY store ORDER BY avg_sale) as avg_rank
from trnsact 
where stype='P'
group by store,yr,mon
having numdays>=20;

select df.mon,count(distinct df.store)
from(select store,extract(year from saledate) as yr, extract(month from saledate) as mon,count(distinct saledate)as numdays,
sum(amt) as rev, rev/numdays as avg_sale,rank() over(PARTITION BY store ORDER BY avg_sale) as avg_rank
from trnsact 
where stype='P'
group by store,yr,mon
having numdays>=20)as df
where df.avg_rank=1
group by df.mon
=========================================================================================================================
   quiz 
=========================================================================================================================
question 2.
select count(distinct sku)
from skuinfo
where brand='polo fas' and (size='XXL' or color='black');

question 3.
select df.store,sm.city,sm.state
from(select store, extract(year from saledate)||extract(month from saledate) as dym, count(distinct saledate) as numdays 
from trnsact
where stype='P'
group by store, dym
having numdays=11)as df join store_msa as sm
on df.store=sm.store

question4.
select top 1 df1.sku,(case when df1.yr=df2.yr then df2.rev-df1.rev end)diff
from(select sku,extract(year from saledate)as yr, extract(month from saledate)as mon,sum(amt)as rev
from trnsact
where stype='P'
group by sku,yr,mon
having mon in (11))as df1 join(select sku,extract(year from saledate)as yr, extract(month from saledate)as mon,sum(amt)as rev
from trnsact
where stype='P'
group by sku,yr,mon
having mon in (12))as df2
on df1.sku=df2.sku
order by diff desc

question5
SELECT su.vendor,COUNT(distinct t.sku)as num_sku
FROM trnsact t LEFT JOIN skstinfo s 
ON t.sku=s.sku AND t.store=s.store
JOIN skuinfo su ON t.sku=su.sku
WHERE s.sku IS NULL
GROUP BY su.vendor
ORDER BY num_sku desc

question 6
SELECT df.sku as sku, df.dev as dev,su.brand
FROM(SELECT top 1 sku,STDDEV_POP(sprice) as dev,count(sprice)as numtrans
FROM trnsact
WHERE stype='P'
GROUP BY sku
HAVING numtrans>100
ORDER BY dev desc)as df JOIN skuinfo as su
ON df.sku=su.sku

question 7 
select cdf.store as store, sm.city,sm.state,cdf.change
from(select top 1 df.store as store, 
sum(case when df.mon=11 then df.numdays end)as nov_numdays,
sum(case when df.mon=12 then df.numdays end)as dec_numdays,
sum(case when df.mon=11 then df.rev end)as nov_rev,
sum(case when df.mon=12 then df.rev end)as dec_rev,
nov_rev/nov_numdays as y,
dec_rev/dec_numdays as x,
x-y as change
from(select store, extract(year from saledate) as yr, extract(month from saledate)as mon,count(distinct saledate)as numdays,
sum(amt)as rev
from trnsact
where stype='P'
group by store,yr,mon
having numdays>=20 and mon in (11,12))as df
group by store
order by change desc)as cdf join store_msa as sm
on cdf.store=sm.store

question 8
select top 2 df.store, df.avg_rev,sm.city,sm.state,sm.msa_income
from(select store, sum(amt)as rev, count(distinct saledate)as numdays,rev/numdays as avg_rev
from trnsact
where stype='P'
group by store)as df join store_msa as sm
on df.store=sm.store
order by sm.msa_income desc;

select top 2 df.store, df.avg_rev,sm.city,sm.state,sm.msa_income
from(select store, sum(amt)as rev, count(distinct saledate)as numdays,rev/numdays as avg_rev
from trnsact
where stype='P'
group by store)as df join store_msa as sm
on df.store=sm.store
order by sm.msa_income ;

question 9
SELECT SUM(df.rev)/SUM(numdays) as avg_group_rev,
       CASE WHEN (sm.msa_income>=1 AND sm.msa_income<=20000)then 'low'
            WHEN (sm.msa_income>=20001 AND sm.msa_income<=30000)then 'med-low'
            WHEN (sm.msa_income>=30001 AND sm.msa_income<=40000)then 'med-high'
            WHEN (sm.msa_income>=40001 AND sm.msa_income<=60000)then 'high' END as in_label
FROM(SELECT store,EXTRACT(year from saledate) as yr, EXTRACT(month from saledate) as mon, SUM(amt)as rev,
       COUNT(DISTINCT saledate)as numdays,
       CASE WHEN EXTRACT(year from saledate)=2005 AND EXTRACT (month from saledate)=8 then 'exclude' END as ex_flag
FROM trnsact
WHERE stype='P' AND ex_flag IS NULL
GROUP BY store,yr,mon
HAVING numdays>=20)as df JOIN store_msa as sm
ON df.store=sm.store
GROUP BY in_label
ORDER BY avg_group_rev desc

question 10.
SELECT AVG(avg_sale) as avg_large
FROM(SELECT df.store as store,sum(t.amt) as rev, count(distinct t.saledate) as numdays,rev/numdays as avg_sale
FROM(SELECT store, 
case when (msa_pop>=1 and msa_pop<=100000) then 'very_small'
     when (msa_pop>=100001 and msa_pop<=200000) then 'small'
     when (msa_pop>=200001 and msa_pop<=500000) then 'med_small'
     when (msa_pop>=500001 and msa_pop<=1000000) then 'med_large'
     when (msa_pop>=1000001 and msa_pop<=5000000) then 'large'
     else 'very_large' end as pop_label
FROM store_msa
WHERE pop_label='very_large') as df join trnsact t
ON df.store=t.store
WHERE t.stype='P'
GROUP BY df.store) as df2

question 11
SELECT df3.store, df3.deptdesc,sm.city,sm.state
FROM(SELECT d.deptdesc,df2.store,df2.perc
FROM(SELECT top 1 df.store,df.dept,
       SUM(CASE WHEN df.mon=11 then df.numdays end)as nov_numdays,
       SUM(CASE WHEN df.mon=12 then df.numdays end)as dec_numdays,
       SUM(CASE WHEN df.mon=11 then df.rev end)as nov_rev,
       SUM(CASE WHEN df.mon=12 then df.rev end)as dec_rev,
       nov_rev/nov_numdays as y,
       dec_rev/dec_numdays as x,
       ((x-y)/y)*100 as perc
FROM(SELECT t.store, su.dept, EXTRACT(year from t.saledate)as yr,EXTRACT(month from t.saledate)as mon,sum(t.amt)as rev,
count(distinct t.saledate) as numdays
FROM trnsact t JOIN skuinfo su
ON t.sku=su.sku
WHERE stype='P'
GROUP BY t.store,su.dept,yr,mon
HAVING numdays>=20 AND mon in (11,12))as df
GROUP BY df.store,df.dept
ORDER BY perc desc)as df2 JOIN deptinfo as d
ON df2.dept=d.dept)as df3 JOIN store_msa as sm
ON df3.store=sm.store

question 12
SELECT df3.store,df3.deptdesc,sm.city,sm.state
FROM(SELECT df2.store,df2.dept,d.deptdesc
FROM(SELECT top 1 df.store, df.dept,
       SUM(CASE WHEN df.mon=8 then df.numdays end)as aug_numdays,
       SUM(CASE WHEN df.mon=9 then df.numdays end)as sep_numdays,
       SUM(CASE WHEN df.mon=8 then df.rev end)as aug_rev,
       SUM(CASE WHEN df.mon=9 then df.rev end)as sep_rev,
       aug_rev/aug_numdays as y,
       sep_rev/sep_numdays as x,
       x-y as change
FROM(SELECT t.store, su.dept, EXTRACT(year from t.saledate)as yr,EXTRACT(month from t.saledate)as mon,sum(t.amt)as rev,
count(distinct t.saledate) as numdays
FROM trnsact t JOIN skuinfo su
ON t.sku=su.sku
WHERE stype='P'
GROUP BY t.store,su.dept,yr,mon
HAVING numdays>=20 AND mon in (8,9))as df 
GROUP BY df.store,df.dept
HAVING change is not null
ORDER BY change)as df2 JOIN deptinfo as d
ON df2.dept=d.dept)df3 JOIN store_msa as sm
ON df3.store=sm.store

question 13
SELECT df4.store as store, df4.deptdesc as deptdesc,sm.city as city,sm.state as state,df4.saleincrese
FROM(SELECT df3.store,d.deptdesc,df3.saleincrese
FROM(SELECT df2.store,su.dept,df2.saleincrese
FROM(SELECT top 1 df.sku, df.store, 
       SUM(CASE WHEN df.mon=8 then df.numsold END)as aug_numsold ,
       SUM(CASE WHEN df.mon=9 then df.numsold END)as sep_numsold ,
       sep_numsold-aug_numsold as saleincrese 
FROM(SELECT sku,store, EXTRACT(year from saledate) as yr, EXTRACT(month from saledate) as mon, sum(quantity)as numsold,
count(distinct saledate) as numdays
FROM trnsact
WHERE stype='P'
GROUP BY sku,store, yr,mon
HAVING numdays>=20 and mon in(8,9))as df
GROUP BY df.sku,df.store
HAVING saleincrese IS NOT NULL
ORDER BY saleincrese)as df2 JOIN skuinfo as su
ON df2.sku=su.sku)as df3 JOIN deptinfo as d
ON df3.dept=d.dept)as df4 JOIN store_msa as sm
ON df4.store=sm.store

question 14.
SELECT df.mon as mon,count(df.avg_rank)
FROM(SELECT store,EXTRACT(year from saledate) as yr, EXTRACT(month from saledate) as mon, SUM(amt)as rev, 
       COUNT(distinct saledate)as numdays,rev/numdays as avg_rev,RANK()over(PARTITION BY store ORDER BY avg_rev) as 
       avg_rank
FROM trnsact 
WHERE stype='P'
GROUP BY store, yr, mon)as df
WHERE df.avg_rank=1
GROUP BY df.mon

question 15
SELECT df.mon as mon,count(df.store) as numstore
FROM(SELECT store,  
       EXTRACT(year from saledate) as yr, EXTRACT(month from saledate) as mon,
       sum(quantity)as q,
       RANK()over(PARTITION BY store ORDER BY q desc) as numreturn
FROM trnsact
WHERE stype='R'
GROUP BY store,yr,mon)as df
WHERE numreturn=1
GROUP BY mon






