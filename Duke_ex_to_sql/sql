

week5
==================================================================================================================================
Exercise
==================================================================================================================================
question 2.
SELECT sku,SUM(amt)
FROM trnsact
WHERE stype='P' AND (EXTRACT(MONTH from saledate)=6 OR EXTRACT(MONTH from saledate)=7 OR EXTRACT(MONTH from saledate)=8)
GROUP BY sku
ORDER BY 2 DESC;

question 3.
select df.store,df.yr,df.mon,count(distinct df.d) as numofday
from(select store, extract(month from saledate) as mon, extract(year from saledate) as yr,extract(day from saledate) as d
from trnsact) as df
group by df.mon, df.yr,df.store
order by numofday asc;

question 4-1.
select df.store, df.yr,df.mon,sum(df.amt),sum(df.amt)/count(distinct saledate) 
from(select store, stype,amt,extract(month from saledate) as mon, extract(year from saledate) as yr,saledate
from trnsact) as df
where df.stype='p'
group by df.store, df.yr,df.mon
order by df.store;

question 4-2. (removing 2005/8 and having more then 20 sales date)
select df.store, df.yr,df.mon,sum(df.amt),sum(df.amt)/count(distinct saledate) 
from(select store, stype,amt,extract(month from saledate) as mon, extract(year from saledate) as yr,saledate
from trnsact) as df
where df.stype='p' and not(df.mon=8 and df.yr=2005)
group by df.store, df.yr,df.mon
having count(distinct saledate)>=20
order by df.store

question 5
SELECT store,  
case when(msa_high>70) then 'high'
     when(msa_high>60) then 'medium'
     when(msa_high>50) then 'low' 
     else 'very low' end
FROM store_msa;

select msa.ranking,sum(stores.rev)/sum(stores.numdays) as avg_sales
from(select store, count(distinct saledate)as numdays,sum(amt)as rev
from trnsact
where stype='p' 
group by store) as stores
join (SELECT store,  
      case when(msa_high>70) then 'high'
           when(msa_high>60) then 'medium'
           when(msa_high>50) then 'low' 
            else 'very low' end as ranking
      FROM store_msa)as msa
on msa.store=stores.store
group by msa.ranking;

question 6
* average daily revenue for highest income
select distinct t.store as store, high.city as city,high.state as state,high.msa_income as income
from(select top 1 m.store,m.city,m.state,m.msa_income
from store_msa m
order by m.msa_income desc) as high join trnsact t
on high.store=t.store;

* average daily revenue for lowest income
select distinct t.store as store, high.city as city,high.state as state,high.msa_income as income
from(select top 1 m.store,m.city,m.state,m.msa_income
from store_msa m
order by m.msa_income ) as high join trnsact t
on high.store=t.store;

question 7
select sku,count(distinct saledate) as numdays, stddev_samp(sprice) as std
from trnsact
group by sku
having numdays>100;

* all the result
select su.brand as brand, su.sku as sk, std_tr.std as sd
from(select sku,count(distinct saledate) as numdays, stddev_samp(sprice) as std
from trnsact
group by sku
having numdays>100)as std_tr join skuinfo su
on su.sku=std_tr.sku
order by sd desc;

* answer the question
select su.brand as brand, su.sku as sk, std_tr.std as sd
from(select top 1 sku,count(distinct saledate) as numdays, stddev_samp(sprice) as std
from trnsact
group by sku
having numdays>100
order by std desc)as std_tr join skuinfo su
on su.sku=std_tr.sku
order by sd desc;

question 8
*without transaction date set
select t.sku as sku, t.saledate,t.sprice
from(select top 1 sku,stddev_samp(sprice) as std
from trnsact
group by sku
order by std desc)as s join trnsact t
on s.sku=t.sku;

*with transaction date over 100 days
select t.sku as sku, t.saledate,t.sprice
from(select top 1 sku,stddev_samp(sprice) as std, count(distinct saledate) as numdays
from trnsact
group by sku
having numdays>100
order by std desc)as s join trnsact t
on s.sku=t.sku;

question 9
select t.mon as mon, t.rev/t.numdays as avg_rev
from(select extract(month from saledate) as mon, extract(year from saledate) as yr, sum(amt) as rev, count(distinct saledate) as numdays
from trnsact
where stype='p'
group by yr, mon
having not(mon=8 and yr=2005)) as t
order by mon;

=========================================================================================================================
   quiz 
=========================================================================================================================
question 2.
select brand ,size,color
from skuinfo
where brand='polo fas' and (size='XXL' or color='black');

question 3.
select str.store, str.city, str.state,df.months,df.years
from(select store, saledate, extract(month from saledate) as months, extract(year from saledate) as yearsfrom trnsact) as df join strinfo stron df.store=str.store
GROUP BY str.city,str.state,str.store,df.months,df.years
HAVING COUNT(DISTINCT df.saledate)=11;
